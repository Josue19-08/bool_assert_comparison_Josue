//! > assert_eq! with false

//! > cairo_code
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert_eq!(a.is_empty(), false);
}

//! > diagnostics
warning: Plugin diagnostic: assert_eq!(expr, false) can be replaced with assert!(!expr).
 --> lib.cairo:6:5
  |
6 |     assert_eq!(a.is_empty(), false);
  |     -------------------------------
  |
error: Plugin diagnostic: `assert_eq` macro is only available in test mode.
 --> lib.cairo:6:5
  |
6 |     assert_eq!(a.is_empty(), false);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert!(!a.is_empty());
}

//! > ==========================================================================

//! > assert_eq! with true

//! > cairo_code
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert_eq!(a.is_empty(), true);
}

//! > diagnostics
warning: Plugin diagnostic: assert_eq!(expr, true) can be replaced with assert!(expr).
 --> lib.cairo:6:5
  |
6 |     assert_eq!(a.is_empty(), true);
  |     ------------------------------
  |
error: Plugin diagnostic: `assert_eq` macro is only available in test mode.
 --> lib.cairo:6:5
  |
6 |     assert_eq!(a.is_empty(), true);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert!(a.is_empty());
}

//! > ==========================================================================

//! > assert_ne! with false

//! > cairo_code
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert_ne!(a.is_empty(), false);
}

//! > diagnostics
warning: Plugin diagnostic: assert_ne!(expr, false) can be replaced with assert!(expr).
 --> lib.cairo:6:5
  |
6 |     assert_ne!(a.is_empty(), false);
  |     -------------------------------
  |
error: Plugin diagnostic: `assert_ne` macro is only available in test mode.
 --> lib.cairo:6:5
  |
6 |     assert_ne!(a.is_empty(), false);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert!(a.is_empty());
}

//! > ==========================================================================

//! > assert_ne! with true

//! > cairo_code
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert_ne!(a.is_empty(), true);
}

//! > diagnostics
warning: Plugin diagnostic: assert_ne!(expr, true) can be replaced with assert!(!expr).
 --> lib.cairo:6:5
  |
6 |     assert_ne!(a.is_empty(), true);
  |     ------------------------------
  |
error: Plugin diagnostic: `assert_ne` macro is only available in test mode.
 --> lib.cairo:6:5
  |
6 |     assert_ne!(a.is_empty(), true);
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |

//! > fixed
//! #[cfg(test)]
fn main() {
    let a: Array<felt252> = ArrayTrait::new();
    assert!(!a.is_empty());
}
